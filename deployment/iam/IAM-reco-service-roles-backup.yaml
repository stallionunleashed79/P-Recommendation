AWSTemplateFormatVersion: "2010-09-09"
Description: "Required roles for Recommendation service"

Parameters:
  RoleName:
    Type: String
    Default: "pbr-pfm-infra-cva-ecs-role"
  CentralLoggingStreamName:
    Type: String
    Default: "platform-avengers-cat_digital_centralized_fluentd-es-kin"
  CVAClientsPolicyName:
    Type: String
    Default: "pbr-pfm-infra-cva-gateway-access-policy"
  EnvironmentSuffix:
    Type: String
    Default: "Dev"

Mappings:
  EnvMap:
    Dev:
      CVAGatewayId: "glq894oow1"
      CVAStageName: "dev"
    Int:
      CVAGatewayId: "fbdg6nmh61"
      CVAStageName: "int"
    Prod:
      CVAGatewayId: ""
      CVAStageName: "prod"

Resources:
  pbrEchoCVAServiceECSRole:
    Type: "AWS::IAM::Role"
    Description: "Allows ECS tasks to call AWS services on your behalf."
    Properties:
      RoleName: !Sub "${RoleName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service:
              - "ecs-tasks.amazonaws.com"
              - "ecs.amazonaws.com"
              - "application-autoscaling.amazonaws.com"
          Action: "sts:AssumeRole"
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole"
  CustomPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${RoleName}-policy"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CloudwatchFullAccessForCVA
            Effect: "Allow"
            Action:
              - "cloudwatch:*"
            Resource:
              - !Sub "arn:aws:cloudwatch::${AWS::AccountId}:dashboard/pfm-infra-*"
              - !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pfm-infra-*"
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: "*"
          - Sid: EventsAccessForCVA
            Effect: "Allow"
            Action:
              - "events:PutEvents"
              - "events:EnableRule"
              - "events:DisableRule"
            Resource:
              - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/pfm-infra-*"

          - Sid: CentralizedKinesisAccess
            Effect: "Allow"
            Action:
              - "kinesis:PutRecord"
              - "kinesis:PutRecords"
            Resource:
              - !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${CentralLoggingStreamName}"
          - Sid: DBSecretAccess
            Effect: "Allow"
            Action:
              - "secretsmanager:GetSecretValue"
            Resource:
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:pfm-infra-cva-*"

          - Sid: LogAccess
            Effect: "Allow"
            Action:
              - "logs:Describe*"
              - "logs:StopQuery"
              - "logs:TestMetricFilter"
              - "logs:ListLogDeliveries"
              - "logs:PutResourcePolicy"
              - "logs:GetQueryResults"
              - "logs:UpdateLogDelivery"
              - "logs:CancelExportTask"
              - "logs:PutDestination"
            Resource:
              - "*"
          - Sid: All
            Effect: "Allow"
            Action:
              - "application-autoscaling:*"
              - "ecr:GetAuthorizationToken"
              - "ecs:UpdateService"
              - "ecs:DescribeServices"
            Resource:
              - "*"
          - Sid: SSMReadAccessForCVA
            Effect: "Allow"
            Action:
              - "ssm:GetParameter"
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/platform-encryption-certificate*"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/platform-encryption-certificate*/*"
          - Sid: S3Access
            Effect: "Allow"
            Action:
              - "s3:PutObject"
              - "s3:GetBucketAcl"
              - "s3:DeleteObject"
              - "s3:GetObject"
              - "s3:ListBucket"
            Resource:
              - "arn:aws:s3:::pfm-infra-cva-*"
              - "arn:aws:s3:::pfm-infra-cva-*/*"
          - Sid: LogsAccessLocked
            Effect: "Allow"
            Action:
              - "logs:ListTagsLogGroup"
              - "logs:DeleteSubscriptionFilter"
              - "logs:DescribeLogStreams"
              - "logs:DescribeSubscriptionFilters"
              - "logs:StartQuery"
              - "logs:DescribeMetricFilters"
              - "logs:DeleteLogStream"
              - "logs:CreateExportTask"
              - "logs:CreateLogStream"
              - "logs:DeleteMetricFilter"
              - "logs:TagLogGroup"
              - "logs:DeleteRetentionPolicy"
              - "logs:GetLogEvents"
              - "logs:AssociateKmsKey"
              - "logs:FilterLogEvents"
              - "logs:DisassociateKmsKey"
              - "logs:DescribeLogGroups"
              - "logs:UntagLogGroup"
              - "logs:DeleteLogGroup"
              - "logs:PutLogEvents"
              - "logs:PutMetricFilter"
              - "logs:PutSubscriptionFilter"
              - "logs:PutRetentionPolicy"
              - "logs:GetLogGroupFields"
              - "cloudwatch:DescribeAlarmHistory"
              - "cloudwatch:DescribeAlarms"
              - "cloudwatch:GetMetricStatistics"
              - "cloudwatch:ListMetrics"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::pfm-infra-cva-*:*"
              - "arn:aws:logs:::log-group::logfluentcollector*:*"
              - "arn:aws:logs:::log-group:/aws/ecs/*"
              - "arn:aws:cloudwatch:*:*:alarm:*"
      Roles:
        - Ref: pbrEchoCVAServiceECSRole

  CVAClientPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Ref CVAClientsPolicyName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CVAGatewayAccess
            Effect: "Allow"
            Action:
              - "execute-api:Invoke"
            Resource: !Sub
              - "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GatewayId}/${StageName}/*/*"
              - {GatewayId: !FindInMap [ EnvMap, !Ref EnvironmentSuffix, CVAGatewayId], StageName: !FindInMap [ EnvMap, !Ref EnvironmentSuffix, CVAStageName]}

  pbrPfmInfraKibanaNotificationRole:
    Type: "AWS::IAM::Role"
    Description: "Allows kibana to publish message to SNS."
    Properties:
      RoleName: "pbr-pfm-infra-kibana-sns-access-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service:
              - "es.amazonaws.com"
          Action:
            - "sts:AssumeRole"
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/PermissionBoundary
      Policies:
        - PolicyName: "SNSAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Effect: "Allow"
              Action: "sns:Publish"
              Resource: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:pfm-infra-cva-emailer"



